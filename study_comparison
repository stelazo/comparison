erm(list=ls())


# Analise de comparação das bases de 2019 e 2020.


# Packages

library(dplyr)
library(readxl)


# Puxando base, escolhendo aba e admitindo nome aos titulos.

base2019_ativos = read_xlsx("Z:\\GERENCIA\\ESTUDOS\\2021\\VALIDAÇÃO TEMPORAL DAS BASES ATUARIAIS\\BASES\\2019-12-BD-SPREV-v02.xlsx", sheet = 1, col_names = TRUE)
base2019_inativos = read_xlsx("Z:\\GERENCIA\\ESTUDOS\\2021\\VALIDAÇÃO TEMPORAL DAS BASES ATUARIAIS\\BASES\\2019-12-BD-SPREV-v02.xlsx", sheet = 2, col_names = TRUE)
base2019_pensionistas = read_xlsx("Z:\\GERENCIA\\ESTUDOS\\2021\\VALIDAÇÃO TEMPORAL DAS BASES ATUARIAIS\\BASES\\2019-12-BD-SPREV-v02.xlsx", sheet = 3, col_names = TRUE)

base2020_ativo = read_xlsx("Z:\\GERENCIA\\ESTUDOS\\2021\\VALIDAÇÃO TEMPORAL DAS BASES ATUARIAIS\\BASES\\2020-12-BD-SPREV.xlsx", sheet = 1, col_names = TRUE)
base2020_inativo = read_xlsx("Z:\\GERENCIA\\ESTUDOS\\2021\\VALIDAÇÃO TEMPORAL DAS BASES ATUARIAIS\\BASES\\2020-12-BD-SPREV.xlsx", sheet = 2, col_names = TRUE)
base2020_pensionista = read_xlsx("Z:\\GERENCIA\\ESTUDOS\\2021\\VALIDAÇÃO TEMPORAL DAS BASES ATUARIAIS\\BASES\\2020-12-BD-SPREV.xlsx", sheet = 3, col_names = TRUE)
base2020_ativos_falecidos_exonerados = read_xlsx("Z:\\GERENCIA\\ESTUDOS\\2021\\VALIDAÇÃO TEMPORAL DAS BASES ATUARIAIS\\BASES\\2020-12-BD-SPREV.xlsx", sheet = 5, col_names = TRUE)
base2020_inativos_falecidos = read_xlsx("Z:\\GERENCIA\\ESTUDOS\\2021\\VALIDAÇÃO TEMPORAL DAS BASES ATUARIAIS\\BASES\\2020-12-BD-SPREV.xlsx", sheet = 6, col_names = TRUE)
base2020_pensionista_falecidos = read_xlsx("Z:\\GERENCIA\\ESTUDOS\\2021\\VALIDAÇÃO TEMPORAL DAS BASES ATUARIAIS\\BASES\\2020-12-BD-SPREV.xlsx", sheet = 7, col_names = TRUE)


# Corrigindo o formato da Data de Nascimento

base2019_ativos$data_nascimento = as.character.Date(base2019_ativos$data_nascimento)
base2019_inativos$data_nascimento = as.character.Date(base2019_inativos$data_nascimento)
base2019_pensionistas$data_nascimento = as.character.Date(base2019_pensionistas$data_nascimento)

base2020_ativo$DT_NASC_SERVIDOR = as.character.Date(base2020_ativo$DT_NASC_SERVIDOR)
base2020_inativo$DT_NASC_APOSENTADO = as.character.Date(base2020_inativo$DT_NASC_APOSENTADO)
base2020_pensionista$DT_NASC_INSTITUIDOR = as.character.Date(base2020_pensionista$DT_NASC_INSTITUIDOR)
base2020_ativos_falecidos_exonerados$DATA_NASCIMENTO = as.character.Date(base2020_ativos_falecidos_exonerados$DATA_NASCIMENTO)
base2020_inativos_falecidos$DATA_NASCIMENTO = as.character.Date(base2020_inativos_falecidos$DATA_NASCIMENTO)
base2020_pensionista_falecidos$DATA_NASCIMENTO_INSTITUIDOR = as.character.Date(base2020_pensionista_falecidos$DATA_NASCIMENTO_INSTITUIDOR)


# Criando novas tabelas com colunas: matricula, cpf, data de nasc, remuneração e situação na base.

tab.ativos2019 = cbind(base2019_ativos$MATRICULA,
                       base2019_ativos$CPF,
                       base2019_ativos$DATA_NASCIMENTO,
                       base2019_ativos$REMUNERACAO_MENSAL_TOTAL_SERVIDOR_ATIVO,
                       rep("ATIVOS2019",length(base2019_ativos$REMUNERACAO_MENSAL_TOTAL_SERVIDOR_ATIVO)))

tab.inativos2019 = cbind(base2019_inativos$MATRICULA,
                         base2019_inativos$CPF,
                         base2019_inativos$DATA_NASCIMENTO,
                         base2019_inativos$REMUNERACAO_MENSAL_TOTAL_SERVIDOR_ATIVO,
                         rep("INATIVOS2019",length(base2019_inativos$REMUNERACAO_MENSAL_TOTAL_SERVIDOR_ATIVO)))

tab.pensionistas2019 = cbind(base2019_pensionistas$MATRICULA_INSTITUIDOR,
                             base2019_pensionistas$CPF_INSTITUIDOR,
                             base2019_pensionistas$DATA_NASCIMENTO_INSTITUIDOR,
                             base2019_pensionistas$VALOR_MENSAL_BENEFICIO,
                             rep("PENSIONISTA2019",length(base2019_pensionistas$DATA_NASCIMENTO_INSTITUIDOR)))

tab.ativos2020 = cbind(base2020_ativo$ID_SERVIDOR_MATRICULA,
                       base2020_ativo$ID_SERVIDOR_CPF,
                       base2020_ativo$DT_NASC_SERVIDOR,
                       base2020_ativo$VL_BASE_CALCULO,
                       rep("ATIVOS2020",length(base2020_ativo$VL_REMUNERACAO)))

tab.inativos2020 = cbind(base2020_inativo$ID_APOSENTADO_MATRICULA,
                         base2020_inativo$ID_APOSENTADO_CPF,
                         base2020_inativo$DT_NASC_APOSENTADO,
                         base2020_inativo$VL_APOSENTADORIA,
                         rep("INATIVO2020",length(base2020_inativo$VL_APOSENTADORIA)))

tab.pensionistas2020 = cbind(base2020_pensionista$ID_INSTITUIDOR_MATRICULA,
                             base2020_pensionista$ID_INSTITUIDOR_CPF,
                             base2020_pensionista$DT_NASC_INSTITUIDOR,
                             base2020_pensionista$VL_BENEF_PENSAO,
                             rep("PENSIONISTA2020",length(base2020_pensionista$VL_BENEF_PENSAO)))


tab.ativos_falecidos_exonerados2020 = cbind(base2020_ativos_falecidos_exonerados$MATRICULA,
                                            base2020_ativos_falecidos_exonerados$CPF,
                                            base2020_ativos_falecidos_exonerados$DATA_NASCIMENTO,
                                            base2020_ativos_falecidos_exonerados$REMUNERACAO_TOTAL,
                                            rep("ATIVOS_FALECIDOS_EXONERADOS2020",length(base2020_ativos_falecidos_exonerados$REMUNERACAO_TOTAL)))

tab.inativos_falecidos2020 = cbind(base2020_inativos_falecidos$MATRICULA,
                                   base2020_inativos_falecidos$CPF,
                                   base2020_inativos_falecidos$DATA_NASCIMENTO,
                                   rep(NA,length(base2020_inativos_falecidos$DATA_NASCIMENTO)),
                                   rep("INATIVOS_FALECIDOS2020",length(base2020_inativos_falecidos$DATA_NASCIMENTO)))

tab.pensionistas_falecidos2020 = cbind(base2020_pensionista_falecidos$MATRICULA_INSTITUIDOR,
                                       base2020_pensionista_falecidos$CPF_INSTITUIDOR,
                                       base2020_pensionista_falecidos$DATA_NASCIMENTO_INSTITUIDOR,
                                       base2020_pensionista_falecidos$VALOR_TOTAL_BENEFÍCIO,
                                       rep("PENSIONISTAS_FALECIDOS2020",length(base2020_pensionista_falecidos$VALOR_TOTAL_BENEFÍCIO)))


# Renomeando o titulo das colunas

colnames(tab.ativos2019) = c("MATRICULA", "CPF", "DATA_NASCIMENTO2019", "REMUNERACAO2019", "SITUACAO2019")
colnames(tab.inativos2019) = c("MATRICULA", "CPF", "DATA_NASCIMENTO2019", "REMUNERACA2019", "SITUACAO2019")
colnames(tab.pensionistas2019) = c("MATRICULA", "CPF", "DATA_NASCIMENTO2019", "REMUNERACAO2019", "SITUACAO2019")
colnames(tab.ativos2020) = c("MATRICULA", "CPF", "DATA_NASCIMENTO2020", "REMUNERACAO2020", "SITUACAO2020")
colnames(tab.inativos2020) = c("MATRICULA", "CPF", "DATA_NASCIMENTO2020", "REMUNERACAO2020", "SITUACAO2020")
colnames(tab.pensionistas2020) = c("MATRICULA", "CPF", "DATA_NASCIMENTO2020", "REMUNERACAO2020", "SITUACAO2020")
colnames(tab.ativos_falecidos_exonerados2020) = c("MATRICULA", "CPF", "DATA_NASCIMENTO2020", "REMUNERACAO2020", "SITUACAO2020")
colnames(tab.inativos_falecidos2020) = c("MATRICULA", "CPF", "DATA_NASCIMENTO2020", "REMUNERACAO2020", "SITUACAO2020")
colnames(tab.pensionistas_falecidos2020) = c("MATRICULA", "CPF", "DATA_NASCIMENTO2020", "REMUNERACAO2020", "SITUACAO2020")


# Renomeando as tabelas para facilitar

tab1 = tab.ativos2019
tab2 = tab.inativos2019
tab3 = tab.pensionistas2019
tab4 = tab.ativos2020
tab5 = tab.inativos2020
tab6 = tab.pensionistas2020
tab7 = tab.ativos_falecidos_exonerados2020
tab8 = tab.inativos_falecidos2020
tab9 = tab.pensionistas_falecidos2020


# Retirando matriculas duplicadas


new = tab1[!duplicated(tab1[,1]),]
new = tab2[!duplicated(tab2[,1]),]
new = tab3[!duplicated(tab3[,1]),]
new = tab4[!duplicated(tab4[,1]),]
new = tab5[!duplicated(tab5[,1]),]
new = tab6[!duplicated(tab6[,1]),]
new = tab7[!duplicated(tab7[,1]),]
new = tab8[!duplicated(tab8[,1]),]
new = tab9[!duplicated(tab9[,1]),]


# Criando nova tabela com todos os dados.

tab.dados.final.2019 =rbind(tab1, tab2, tab3)
tab.dados.final.2020 = rbind( tab4, tab5, tab6, tab7, tab8, tab9)


# Mudando tabela para formato de excel

df1 = data.frame(tab.dados.final.2019)
df2 = data.frame(tab.dados.final.2020)


# Dividindo a tabela em quem se manteve na base, quem saiu da base em 2020, e quem entrou na base em 2020.


# Quem saiu da base:

saidas = !(df1$MATRICULA %in% df2$MATRICULA)

# Tabela das matriculas que sumiram da base:

sumiu.da.base = df1[saidas,]


# Quem entrou na base:

entradas = df2$MATRICULA %in% df1$MATRICULA

# Tabela das matriculas que entraram da base:

novos.na.base = df2[entradas,]


# Quem se manteve na base ( com os dados da  tabela de 2019) :

tab.mantidos = df1[!saidas,]

# Associando a tabela das matriculas mantidas junto com os dados complementares da tabela de 2020.

tab.junta = merge (x =tab.mantidos,
                   y = df2,
                   by.x = "MATRICULA",
                   by.y = "MATRICULA")


# 1) Calculando a diferença de base de cálculo da base mantida.

# Tabela com calculo da diferenças entre as remunerações:

tab.junta$DIFERENCA = as.numeric(tab.junta$REMUNERACAO2020) - as.numeric(tab.junta$REMUNERACAO2019)


# 2) Calculando a diferença percentual do item anterior (item 1).

tab.junta$DIFERENCA_PORCENTAGEM = as.numeric(tab.junta$DIFERENCA)/as.numeric(tab.junta$REMUNERACAO2019)


# 3) Se houve mudança nos critérios de elegibidade e data de nascimento registrada. # Criando novas tabelas com colunas: matricula, cpf, data de nasc, remuneração e situação na base.

# Puxando colunas de citerio de elegibilidade:

tab2019ativos = cbind(base2019_ativos$MATRICULA,
                      base2019_ativos$`C_CRITÉRIO_ELEGIBILIDADE:`,
                      rep("ATIVOS2019",length(base2019_ativos$REMUNERACAO_MENSAL_TOTAL_SERVIDOR_ATIVO)))

tab2020ativos = cbind(base2020_ativo$ID_SERVIDOR_MATRICULA,
                      base2020_ativo$CO_CRITERIO_ELEGIBILIDADE,
                      rep("ATIVOS2020",length(base2020_ativo$VL_REMUNERACAO)))

# Renomeando o titulo das colunas

colnames(tab2019ativos) = c("MATRICULA", "CRITERIO_ELEGIBILIDADE2019", "SITUACAO2019")
colnames(tab2020ativos) = c("MATRICULA", "CRITERIO_ELEGIBILIDADE2020", "SITUACAO2020")

new = tab2019ativos[!duplicated(tab2019ativos[,1]),]
new = tab2020ativos[!duplicated(tab2020ativos[,1]),]


df3 = data.frame(tab2019ativos)
df4 = data.frame(tab2020ativos)

# saidas da base

saidas2 = !(df3$MATRICULA %in% df4$MATRICULA)

# Quem se manteve na base:

tab.mantidos2 = df3[!saidas2,]

# Associando a tabela das matriculas mantidas junto com os dados complementares da tabela de 2020.

tab.junta2 = merge(x = tab.mantidos2,
                   y = df4,
                   by.x = "MATRICULA",
                   by.y = "MATRICULA")

# Encontrando os criterios de elegibilidade diferentes

criterio.elegibilidade.dif = !(tab.junta2$CRITERIO_ELEGIBILIDADE2019 %in% tab.junta2$CRITERIO_ELEGIBILIDADE2020)


criterio.elegibilidade.igual = tab.junta2[!criterio.elegibilidade.dif,]

# Vendo se há datas de nascimentos na base dos que se mantiveram na base estâo iguais.


d_nasc.diferente = !(tab.mantidos$DATA_NASCIMENTO2019 %in% tab.mantidos$DATA_NASCIMENTO2020)  # (PRECISO ASSOCIAR MATRICULA C DATA DE NA)

d_nasc.diferente.tab = tab.mantidos[d_nasc.diferente,]    # 116431 datas de nascimentos nâo foram encontradas.

d_nasc.encontrada =(tab.mantidos$DATA_NASCIMENTO2019 %in% tab.mantidos$DATA_NASCIMENTO2020)    # 128679 datas de nascimentos iguais nas duas bases.

tab.c.datas.dif = merge (x =d_nasc.n.encontrada.tab,
                         y = d_nasc.encontrada,
                         by.x = "DATA_NASCIMENTO2019",
                         by.y = "DATA_NASCIMENTO2020")


# 4) Se o tempo de contribuição mais as averbações na passagem 2019/2020 cresceu mais de 12 meses.

ativos2019.new = cbind(base2019_ativos$matricula,
                       base2019_ativos$data_posse,
                       base2019_ativos$averbacao_rgps,
                       base2019_ativos$averbacao_rpps,
                       rep("ATIVOS2019",length(base2019_ativos$Remuneração)))

ativos2020.new = cbind(base2020_ativo$ID_SERVIDOR_MATRICULA,
                       base2020_ativo$DT_ING_SERV_PUB,
                       base2020_ativo$NU_TEMPO_RGPS,
                       base2020_ativo$NU_TEMPO_RPPS_MUN,
                       base2020_ativo$NU_TEMPO_RPPS_EST,
                       base2020_ativo$NU_TEMPO_RPPS_FED,
                       rep("ATIVOS2020",length(base2020_ativo$VL_REMUNERACAO)))


colnames(ativos2019.new) = c("MATRICULA_2019",
                             "DATA_POSSE_2019",
                             "RGPS_2019",
                             "RPPS_2019",
                             "SITUACAO_2019")
colnames(ativos2020.new) = c("MATRICULA_2020",
                             "DATA_POSSE_2020",
                             "RGPS_2020",
                             "RPPS_MUN_2020",
                             "RPSS_EST_2020",
                             "RPSS_FED_2020",
                             "SITUACAO_2020")


df5 = data.frame(ativos2019.new)
df6 = data.frame(ativos2020.new)


tab.ativos.2019.2020 = merge (x =df5,
                              y = df6)


tab.ativos.2019.2020$DIFERENCA_RGPS = as.numeric(tab.ativos.2019.2020$RGPS_2020) - as.numeric(tab.ativos.2019.2020$RGPS_2019)

tab.ativos.2019.2020$DIFERENCA_RPPS_MUN = as.numeric(tab.ativos.2019.2020$RPPS_MUN_2020) - as.numeric(tab.ativos.2019.2020$RPPPS_2019)

tab.ativos.2019.2020$DIFERENCA_RPPS_EST = as.numeric(tab.ativos.2019.2020$RPPS_EST_2020) - as.numeric(tab.ativos.2019.2020$RPPPS_2019)

tab.ativos.2019.2020$DIFERENCA_RPPS_FED = as.numeric(tab.ativos.2019.2020$RPPS_FED_2020) - as.numeric(tab.ativos.2019.2020$RPPPS_2019)

# 5) Base de cálculo total adicionada em 2020.



# 6) Base de cálculo total removida em 2020. 



# 7) Comparativo de quantidade de ativos, inativos e pensionistas (2019/2020).

tab.ativos2019 = cbind(base2019_ativos$matricula,
                       base2019_ativos$cpf,
                       base2019_ativos$data_nascimento,
                       base2019_ativos$Remuneração,
                       rep("ATIVOS2019",length(base2019_ativos$Remuneração)))

tab.inativos2019 = cbind(base2019_inativos$matricula,
                         base2019_inativos$cpf,
                         base2019_inativos$data_nascimento,
                         base2019_inativos$valor,
                         rep("INATIVOS2019",length(base2019_inativos$valor)))

tab.pensionistas2019 = cbind(base2019_pensionistas$matricula,
                             base2019_pensionistas$cpf_inst,
                             base2019_pensionistas$data_nascimento,
                             base2019_pensionistas$valor,
                             rep("PENSIONISTA2019",length(base2019_pensionistas$data_nascimento)))

tab.ativos2020 = cbind(base2020_ativo$ID_SERVIDOR_MATRICULA,
                       base2020_ativo$ID_SERVIDOR_CPF,
                       base2020_ativo$DT_NASC_SERVIDOR,
                       base2020_ativo$VL_BASE_CALCULO,
                       rep("ATIVOS2020",length(base2020_ativo$VL_REMUNERACAO)))

tab.inativos2020 = cbind(base2020_inativo$ID_APOSENTADO_MATRICULA,
                         base2020_inativo$ID_APOSENTADO_CPF,
                         base2020_inativo$DT_NASC_APOSENTADO,
                         base2020_inativo$VL_APOSENTADORIA,
                         rep("INATIVO2020",length(base2020_inativo$VL_APOSENTADORIA)))

tab.pensionistas2020 = cbind(tab.pensionistas2020$MATRICULA)

tab1 = tab.ativos2019
tab2 = tab.inativos2019
tab3 = tab.pensionistas2019
tab4 = tab.ativos2020
tab5 = tab.inativos2020
tab6 = tab.pensionistas2020

sum = tab.ativos2019
tab.comparacao = cbind((sum = tab.ativos2019$MATRICULA),
                       (sum = tab.inativos2019$MATRICULA),
                       (sum = tab.pensionistas2019$MATRICULA),
                       (sum = tab.ativos2020$MATRICULA),
                       (sum = tab.inativos2020$MATRICULA),
                       (sum = tab.pensionistas2020$MATRICULA))
